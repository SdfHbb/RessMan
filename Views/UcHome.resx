<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>